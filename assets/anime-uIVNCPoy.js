import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css              */class l{constructor(){this.factsContainer=document.getElementById("factsContainer"),this.loadingElement=document.getElementById("loading"),this.errorElement=document.getElementById("error"),this.loadButton=document.getElementById("loadFacts"),this.clearButton=document.getElementById("clearFacts"),this.factCountSelect=document.getElementById("factCount"),this.animeSelect=document.getElementById("animeSelect"),this.animes=[],this.loadButton&&(this.initEventListeners(),this.loadAnimeList())}initEventListeners(){this.loadButton.addEventListener("click",()=>this.loadAnimeFacts()),this.clearButton.addEventListener("click",()=>this.clearData())}async loadAnimeList(){this.showLoading();try{const t=await fetch("https://api.jikan.moe/v4/top/anime?limit=20");if(!t.ok)throw new Error(`API error! status: ${t.status}`);const s=await t.json();if(s.data)this.animes=s.data,this.populateAnimeSelect();else throw new Error("Invalid API response format")}catch(t){console.error("Error loading anime list:",t),this.showError("Failed to load anime list. Please try again later.")}finally{this.hideLoading()}}async loadAnimeFacts(){const t=this.animeSelect.value,s=this.factCountSelect.value;if(!t){this.showError("Please select an anime first!");return}this.showLoading(),this.hideError();try{const e=this.animes.find(o=>o.mal_id==t);if(!e)throw new Error("Selected anime not found");const r=await fetch(`https://api.jikan.moe/v4/anime/${t}`);if(!r.ok)throw new Error(`API error! status: ${r.status}`);const a=await r.json();this.displayAnimeInfo(a.data,e,s)}catch(e){console.error("Error loading anime facts:",e),this.showError("Failed to load anime information. Please try again.")}finally{this.hideLoading()}}populateAnimeSelect(){this.animeSelect.innerHTML='<option value="">Select an anime...</option>',this.animes.forEach(t=>{const s=document.createElement("option");s.value=t.mal_id,s.textContent=t.title,this.animeSelect.appendChild(s)})}displayAnimeInfo(t,s,e){var o,d;this.factsContainer.innerHTML="";const r=this.generateFactsFromData(t,e),a=document.createElement("div");a.className="fact-card",a.style.textAlign="center",a.style.background="linear-gradient(135deg, #667eea 0%, #764ba2 100%)",a.style.color="white",a.innerHTML=`
            <h3 style="margin-bottom: 1rem; font-size: 1.5rem;">${s.title}</h3>
            ${(d=(o=s.images)==null?void 0:o.jpg)!=null&&d.image_url?`<img src="${s.images.jpg.image_url}" alt="${s.title}" 
                      style="max-width: 200px; border-radius: 8px; margin-bottom: 1rem; border: 3px solid white;">`:""}
            <div style="display: flex; justify-content: center; gap: 1rem; flex-wrap: wrap; margin-top: 1rem;">
                ${t.score?`<span>‚≠ê ${t.score}/10</span>`:""}
                ${t.episodes?`<span>üé¨ ${t.episodes} eps</span>`:""}
                ${t.status?`<span>üìä ${t.status}</span>`:""}
            </div>
        `,this.factsContainer.appendChild(a),r.forEach((c,i)=>{const n=this.createFactCard(c,i+1);this.factsContainer.appendChild(n)})}generateFactsFromData(t,s){var r,a,o,d,c;const e=[];if(t.synopsis&&e.push({fact_id:1,fact:`Synopsis: ${t.synopsis.substring(0,200)}...`}),t.background&&e.push({fact_id:2,fact:`Background: ${t.background.substring(0,150)}...`}),(r=t.aired)!=null&&r.from){const i=new Date(t.aired.from).getFullYear();e.push({fact_id:3,fact:`First aired in ${i}`})}if(((a=t.genres)==null?void 0:a.length)>0){const i=t.genres.map(n=>n.name).join(", ");e.push({fact_id:4,fact:`Genres: ${i}`})}if(((o=t.studios)==null?void 0:o.length)>0){const i=t.studios.map(n=>n.name).join(", ");e.push({fact_id:5,fact:`Studio: ${i}`})}if(t.rating&&e.push({fact_id:6,fact:`Rating: ${t.rating}`}),((d=t.themes)==null?void 0:d.length)>0){const i=t.themes.map(n=>n.name).join(", ");e.push({fact_id:7,fact:`Themes: ${i}`})}if(((c=t.demographics)==null?void 0:c.length)>0){const i=t.demographics.map(n=>n.name).join(", ");e.push({fact_id:8,fact:`Demographic: ${i}`})}return e.slice(0,s)}createFactCard(t,s){const e=document.createElement("div");return e.className="fact-card",e.innerHTML=`
            <div class="fact-number">Fact #${s}</div>
            <div class="fact-text">${t.fact}</div>
        `,e}clearData(){this.factsContainer.innerHTML="",this.hideError()}showLoading(){this.loadingElement.classList.remove("hidden"),this.loadButton.disabled=!0,this.animeSelect.disabled=!0}hideLoading(){this.loadingElement.classList.add("hidden"),this.loadButton.disabled=!1,this.animeSelect.disabled=!1}showError(t){this.errorElement.innerHTML=`<p>${t}</p>`,this.errorElement.classList.remove("hidden")}hideError(){this.errorElement.classList.add("hidden")}}document.addEventListener("DOMContentLoaded",()=>{new l});
